{"ast":null,"code":"import _objectSpread from \"/Users/danny/Development/Mods/mod_4/weekend_1/lutrivia-react-nyc-clarke-web-100719/lutrivia/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/danny/Development/Mods/mod_4/weekend_1/lutrivia-react-nyc-clarke-web-100719/lutrivia/src/QuestionContainer.js\";\nimport React from 'react';\nimport QuestionTile from './QuestionTile';\nexport default class QuestionContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fqs: this.props.qs.map((q, ind) => {\n        return _objectSpread({}, q, {\n          status: null,\n          index: ind\n        });\n      }),\n      score: 0\n    };\n\n    this.handleClick = (value, index) => {\n      if (this.state.fqs[index].status === null) {\n        let newQs = [...this.state.fqs];\n        newQs[index].status = value === 'true' ? true : false;\n        let updateScore = this.state.score;\n        newQs[index].status === newQs[answer] ? updateScore++ : null;\n        this.setState({\n          fqs: newQs,\n          score: updateScore\n        });\n      }\n    };\n\n    this.renderQuestions = () => {\n      return this.state.fqs.map(q => React.createElement(QuestionTile, Object.assign({}, q, {\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })));\n    };\n  }\n\n  render() {\n    console.log(this.state.fqs);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.renderQuestions());\n  }\n\n}","map":{"version":3,"sources":["/Users/danny/Development/Mods/mod_4/weekend_1/lutrivia-react-nyc-clarke-web-100719/lutrivia/src/QuestionContainer.js"],"names":["React","QuestionTile","QuestionContainer","Component","state","fqs","props","qs","map","q","ind","status","index","score","handleClick","value","newQs","updateScore","answer","setState","renderQuestions","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,eAAe,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAA+C;AAAA;AAAA;AAAA,SAE1DC,KAF0D,GAEpD;AACFC,MAAAA,GAAG,EAAC,KAAKC,KAAL,CAAWC,EAAX,CAAcC,GAAd,CAAkB,CAACC,CAAD,EAAGC,GAAH,KAAU;AAAC,iCAAUD,CAAV;AAAYE,UAAAA,MAAM,EAAC,IAAnB;AAAwBC,UAAAA,KAAK,EAACF;AAA9B;AAAmC,OAAhE,CADF;AAEFG,MAAAA,KAAK,EAAE;AAFL,KAFoD;;AAAA,SAO1DC,WAP0D,GAO5C,CAACC,KAAD,EAAOH,KAAP,KAAgB;AAC1B,UAAG,KAAKR,KAAL,CAAWC,GAAX,CAAeO,KAAf,EAAsBD,MAAtB,KAAiC,IAApC,EAAyC;AACzC,YAAIK,KAAK,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWC,GAAf,CAAZ;AACAW,QAAAA,KAAK,CAACJ,KAAD,CAAL,CAAaD,MAAb,GAAsBI,KAAK,KAAK,MAAV,GAAkB,IAAlB,GAAyB,KAA/C;AACA,YAAIE,WAAW,GAAG,KAAKb,KAAL,CAAWS,KAA7B;AACAG,QAAAA,KAAK,CAACJ,KAAD,CAAL,CAAaD,MAAb,KAAwBK,KAAK,CAACE,MAAD,CAA7B,GAAwCD,WAAW,EAAnD,GAAwD,IAAxD;AACA,aAAKE,QAAL,CAAc;AAACd,UAAAA,GAAG,EAAEW,KAAN;AAAaH,UAAAA,KAAK,EAAEI;AAApB,SAAd;AACC;AACJ,KAfyD;;AAAA,SAiB1DG,eAjB0D,GAiBxC,MAAK;AACnB,aAAO,KAAKhB,KAAL,CAAWC,GAAX,CAAeG,GAAf,CAAmBC,CAAC,IAAI,oBAAC,YAAD,oBAAkBA,CAAlB;AAAqB,QAAA,WAAW,EAAE,KAAKK,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxB,CAAP;AACH,KAnByD;AAAA;;AAoB1DO,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,GAAvB;AACA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKe,eAAL,EAAN,CAAN;AACH;;AAvByD","sourcesContent":["import React from 'react'\nimport QuestionTile from './QuestionTile'\nexport default class QuestionContainer extends React.Component{\n\n    state={\n        fqs:this.props.qs.map((q,ind) =>{return{...q,status:null,index:ind}}),\n        score: 0\n    }\n\n    handleClick = (value,index) =>{\n        if(this.state.fqs[index].status === null){\n        let newQs = [...this.state.fqs]\n        newQs[index].status = value === 'true'? true : false\n        let updateScore = this.state.score\n        newQs[index].status === newQs[answer] ? updateScore++ : null\n        this.setState({fqs: newQs, score: updateScore})\n        }\n    }\n\n    renderQuestions = () =>{\n        return(this.state.fqs.map(q => <QuestionTile {...q} handleClick={this.handleClick}/>))\n    }\n    render(){\n        console.log(this.state.fqs)\n        return<div>{this.renderQuestions()}</div>\n    }\n\n}"]},"metadata":{},"sourceType":"module"}